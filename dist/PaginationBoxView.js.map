{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","evt","preventDefault","returnValue","state","selected","handlePageSelected","handleNextPage","pageCount","forcePage","setState","callCallback","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","index","getPageElement","leftSide","rightSide","page","breakView","createPageView","marginPagesDisplayed","keys","Object","breakLabelKey","length","breakLabelValue","breakLabel","breakClassName","initialPage","disableInitialCallback","nextProps","pageIndex","hrefBuilder","bind","pageClassName","pageLinkClassName","activeClassName","extraAriaContext","disabled","disabledClassName","previousClasses","previousClassName","nextClasses","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","propTypes","number","isRequired","node","func","bool","string","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : \"selected\",\n    previousClassName     : \"previous\",\n    nextClassName         : \"next\",\n    previousLabel         : \"Previous\",\n    nextLabel             : \"Next\",\n    breakLabel            : \"...\",\n    disabledClassName     : \"disabled\",\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof(this.props.initialPage) !== 'undefined' && !this.props.disableInitialCallback) {\n      this.callCallback(this.props.initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  handlePreviousPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected > 0) {\n      this.handlePageSelected(this.state.selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected < this.props.pageCount - 1) {\n      this.handlePageSelected(this.state.selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    // Don't change selected page if it forced from props\n    if (!this.props.forcePage) {\n      this.setState({selected: selected});\n    }\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  hrefBuilder(pageIndex) {\n    if (this.props.hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      return this.props.hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  getPageElement(index) {\n    return <PageView\n      onClick={this.handlePageSelected.bind(null, index)}\n      selected={this.state.selected === index}\n      pageClassName={this.props.pageClassName}\n      pageLinkClassName={this.props.pageLinkClassName}\n      activeClassName={this.props.activeClassName}\n      extraAriaContext={this.props.extraAriaContext}\n      href={this.hrefBuilder(index)}\n      page={index + 1} />\n  }\n\n  pagination = () => {\n    let items = {};\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items['key' + index] = this.getPageElement(index);\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.state.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1;\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView\n              breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n            />\n          );\n\n          items['key' + index] = breakView;\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    let disabled = this.props.disabledClassName;\n\n    const previousClasses = classNames(this.props.previousClassName,\n                                       {[disabled]: this.state.selected === 0});\n\n    const nextClasses = classNames(this.props.nextClassName,\n                                   {[disabled]: this.state.selected === this.props.pageCount - 1});\n\n    return (\n      <ul className={this.props.containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={this.props.previousLinkClassName}\n             href={this.hrefBuilder(this.state.selected - 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handlePreviousPage}>\n            {this.props.previousLabel}\n          </a>\n        </li>\n\n        {createFragment(this.pagination())}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={this.props.nextLinkClassName}\n             href={this.hrefBuilder(this.state.selected + 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handleNextPage}>\n            {this.props.nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n};\n"]}